version: '2'
catalog:
  name: traefik
  version: v1.7.16.0
  description: |
    Traefik load balancer.
  minimum_rancher_version: v0.59.0
  maintainer: "Eugen Mayer <eugen.mayer@kontextwork.de>"
  uuid: traefik-0
  questions:
    - variable: "rancher_integration"
      label: "Rancher based backend:"
      description: |
        Enable rancher integration mode. Traefik built in integration, metadata or api, or external sidekick integration with confd.
      default: metadata
      required: true
      type: enum
      options:
        - off
        - metadata
        - api
        - external
    - variable: "https_enable"
      label: "Https enable:"
      description: |
        Enable https , see ACME settings for SSL certificate integration with LE
      default: true
      required: true
      type: enum
      options:
        - false
        - true
        - only
    - variable: "http_port"
      description: "Traefik http public port to listen."
      label: "Http port:"
      required: true
      default: 8080
      type: "int"
    - variable: "https_port"
      description: "Traefik https public port to listen."
      label: "Https port:"
      required: true
      default: 8443
      type: "int"
    - variable: "admin_port"
      description: "Traefik admin public port to listen for api, rest, ping and webui."
      label: "Admin port:"
      required: true
      default: 8000
      type: "int"
    - variable: "admin_ssl"
      description: "Enable ssl for api, rest, ping and webui."
      label: "Admin ssl:"
      required: true
      default: true
      type: "boolean"
    - variable: "https_min_tls"
      description: |
        Minimal allowed tls version to accept connections from.
        See the traefik documentation for allowed values. Default is `VersionTLS12`.
      label: "Https min tls:"
      required: false
      default: "VersionTLS12"
      type: "string"
    - variable: "acme_enable"
      description: "Enable acme support on traefik to get SSL certificates."
      label: "ACME enable:"
      required: true
      default: false
      type: "boolean"
    - variable: "acme_challenge"
      description: "Either http for http based challange or DNS for DNS-01 based challenge"
      label: "ACME challenge type:"
      required: false
      default: "http"
      type: enum
      options: # List of options if using type of `enum`
        - http
        - dns
    - variable: "acme_challenge_dns_provider"
      description: "If you selected the challenge type DNS, select your provider here."
      label: "ACME challenge DNS provider (DNS only):"
      required: false
      type: enum
      options: # List of options if using type of `enum`
        - auroradns
        - azure
        - bluecat
        - cloudflare
        - cloudxns
        - digitalocean
        - dnsimple
        - dnspod
        - dnsmadeeasy
        - duckdns
        - dyn
        - exoscale
        - fastdns
        - gandi
        - gandiv5
        - glesys
        - godaddy
        - gcloud
        - lightsail
        - linode
        - namecheap
        - namedotcom
        - ns1
        - otc
        - ovh
        - pdns
        - rackspace
        - rout53
        - rfc2136
        - vultr
    - variable: "acme_challenge_dns_credentials"
      description: "If you selected the challenge type DNS, put a 'key=value;key=value formatted list of credentials here (e.g. CLOUDFLARE_EMAIL=me@mine.tld;CLOUDFLARE_API_KEY=verysecret). Depending on your provider, see https://docs.traefik.io/configuration/acme/#provider"
      label: "ACME challenge DNS credentials (DNS only):"
      required: false
      type: "string"
    - variable: "acme_email"
      description: "ACME user email."
      label: "ACME email:"
      required: true
      default: "test@test.local"
      type: "string"
    - variable: "acme_onhostrule"
      description: "Enable acme onHostRule, so the ACME certficates are requested for the domain you define in the frontend.rule EXPR ."
      label: "ACME onHostRule:"
      required: true
      default: true
      type: "boolean"
    - variable: "acme_caserver"
      description: "ACME caServer to use. Use https://acme-staging.api.letsencrypt.org/directory for staging environments"
      label: "ACME caServer:"
      required: true
      default: "https://acme-v02.api.letsencrypt.org/directory"
      type: "string"
    - variable: "acme_logging"
      description: "Log ACME request, mainly for debugging and fixing ACME challenged."
      label: "ACME Logging:"
      required: true
      default: false
      type: "boolean"
    - variable: "insecure_skip"
      description: "Enable InsecureSkipVerify param so certificates for contacing TLS based backends are not verified."
      label: "InsecureSkipVerify:"
      required: true
      default: false
      type: "boolean"
    - variable: "trusted_ips"
      description: |
        Enable proxyProtocol and forwardHeaders just for trusted IPs. Eg: `172.0.0.0/16,192.168.0.1`
        See the traefik documentation for more info. Default is ``.
      label: "Trusted IPs:"
      required: false
      default: ""
      type: "string"
    - variable: "compress_enable"
      label: "Enable compression:"
      description: |
        Enable Traefik compression for entrypoints.
      default: true
      required: true
      type: "boolean"
    - variable: "timeout_read"
      label: "Timeout read:"
      description: |
        Traefik respondingTimeouts readTimeout (s).
      default: 0
      required: true
      type: "int"
    - variable: "timeout_write"
      label: "Timeout write:"
      description: |
        Traefik respondingTimeouts writeTimeout (s).
      default: 0
      required: true
      type: "int"
    - variable: "timeout_idle"
      label: "Timeout idle:"
      description: |
        Traefik respondingTimeouts idleTimeout (s).
      default: 180
      required: true
      type: "int"
    - variable: "timeout_dial"
      label: "Timeout dial:"
      description: |
        Traefik forwardingTimeouts dialTimeout (s).
      default: 30
      required: true
      type: "int"
    - variable: "timeout_header"
      label: "Timeout header:"
      description: |
        Traefik forwardingTimeouts responseHeaderTimeout (s).
      default: 0
      required: true
      type: "int"
    - variable: "admin_statistics"
      description: "Enable more detailed statistics."
      label: "Admin statistics history:"
      required: true
      default: 10
      type: "int"
    - variable: "admin_auth_method"
      description: "Admin auth method on api, rest and webui."
      label: "Admin auth method:"
      required: true
      default: "basic"
      type: enum
      options: # List of options if using type of `enum`
        - basic
        - digest
    - variable: "admin_users"
      description: "Admin auth user list on api, rest and webui. Generate with htpassword for basic or htdigest with traefik realm for digest."
      label: "Admin users:"
      type: "multiline"
      required: false
      default: ""
    - variable: "metrics_enable"
      description: "Enable traefik metrics."
      label: "Metrics enable"
      default: false
      required: true
      type: "boolean"
    - variable: "metrics_exporter"
      description: "Traefik metrics exporter."
      label: "Metrics exporter:"
      required: false
      default:
      type: enum
      options: # List of options if using type of `enum`
        - prometheus
        - datadog
        - statsd
        - influxdb
    - variable: "metrics_push"
      description: "Traefik metrics exporter push interval. Apply on datadog, statsd and influxdb."
      label: "Metrics push interval (s):"
      required: false
      default: 10
      type: "int"
    - variable: "metrics_address"
      description: "Traefik metrics exporter address to push. Apply on datadog, statsd and influxdb."
      label: "Metrics address:"
      required: false
      default: ""
      type: "string"
    - variable: "metrics_prometheus_buckets"
      description: "Traefik metrics buckets for prometheus."
      label: "Metrics prometheus buckets"
      default: "[0.1,0.3,1.2,5.0]"
      required: false
      type: "string"
    - variable: "usage_enable"
      description: |
        Enable/disable send anonymous usage collection to Traefik. See https://docs.traefik.io/basics/#collected-data
      label: "Traefik send anonymous usage:"
      required: true
      default: false
      type: "boolean"
    - variable: "file_enable"
      description: |
        Also enable file based endpoints - you can use this in addition to other backends. Put your rules under /mnt/filestorage/rules.toml
      label: "File based backend:"
      required: true
      default: false
      type: "boolean"
    - variable: "constraints"
      description: |
        Traefik constraints for rancher provider. Eg: "tag==api"
        Only valid for api and metadata integration.
      label: "Traefik constraints:"
      required: false
      default: ""
      type: "string"
    - variable: "host_label"
      description: "Host label where to run traefik service. This label need to be added to the host so traefik can start a container for the server"
      label: "Host label:"
      required: true
      default: "traefik_lb=true"
      type: "string"
    - variable: "rancher_healthcheck"
      description: |
        Enable/disable rancher services healtcheck filter. If enable, just healthy services will be published.
        Only valid for api and metadata integration.
      label: "Rancher healthcheck filter:"
      required: true
      default: false
      type: "boolean"